{"version":3,"file":"202.js","mappings":"4NAEO,MAAMA,EAAgB,CAC3BC,QAAS,CACPC,QAAS,CACPC,MAAOC,EAAAA,KAAAA,QACPC,UAAU,EACVC,aAAc,uEAEhBC,KAAM,CACJJ,MAAOC,EAAAA,KAAAA,MACPI,UAAW,CACTC,MAAO,CAAEN,MAAOC,EAAAA,KAAAA,QAChBM,KAAM,CACJP,MAAOC,EAAAA,KAAAA,OACPO,YAAa,CAACC,EAAAA,WAAAA,QAEhBC,kBAAmB,CACjBV,MAAOC,EAAAA,KAAAA,QAETU,IAAK,CACHX,MAAOC,EAAAA,KAAAA,QACPC,UAAU,IAGdA,SAAU,GACVC,aAAc,uEAGlBS,OAAQ,CACNC,iBAAkB,CAChBX,SAAU,iDACVC,aAAc,4FACdK,YAAa,CAACC,EAAAA,WAAAA,4BAAuC,CAAC,mBAG1DK,QAAS,CACPf,QAAS,CACPC,MAAOC,EAAAA,KAAAA,QACPC,UAAU,EACVC,aAAc,qECjCdY,EAAsB,CAC1B,mBAAoB,UACpBC,MAAO,UAGHC,EAAoBC,EAAAA,KAO1B,SAASC,IACP,MAAMC,EAAa,uBACbC,EAAW,OAEXC,EAAU,CACdC,YAAaF,EACbD,WAAAA,GAYF,OATAI,EAAAA,EAAAA,oBAAmBJ,EAAYvB,IAE/B4B,EAAAA,EAAAA,qBAAoB,CAClB,CACEC,KAAO,GAAEC,OAAOC,eAChBC,MAAO,UAIJ,CACLC,MAAO,CACL,CACEC,MAAMC,EAAAA,EAAAA,oBAAkB,IAAM,+DAA4BV,GAC1DW,MAAOZ,EACPa,OAAQ,CAAEC,WAAW,GACrBC,QAAS,CAAED,WAAW,KAG1BE,WAAY,CACV,CACEC,GAAI,wBACJC,KAAM,gBACNR,MAAMC,EAAAA,EAAAA,oBACJ,IAAM,+DACNV,GAEFkB,UAAW,yBAEb,CACEF,GAAI,6BACJC,KAAM,gBACNR,MAAMC,EAAAA,EAAAA,oBACJ,IAAM,+DACNV,GAEFkB,UAAW,kC,cC/DnB,IAAIC,EAAM,CACT,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,KAED,YAAa,CACZ,IACA,MAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,KAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAML,EAAKc,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,IAClCJ,EAAoBN,KAG7BI,EAAoBW,KAAO,IAAOC,OAAOD,KAAKZ,GAC9CC,EAAoBJ,GAAK,IACzBiB,EAAOC,QAAUd","sources":["webpack://@mhiseg/esm-home-app/./src/openmrs-esm-home-schema.ts","webpack://@mhiseg/esm-home-app/./src/index.ts","webpack://@mhiseg/esm-home-app//home/bschilem/workspace/Mhiseg_gitHub/esm-home-app/translations|lazy|nonrecursive|/.json$/"],"sourcesContent":["import { Type, validators } from '@openmrs/esm-framework';\n\nexport const esmHomeSchema = {\n  buttons: {\n    enabled: {\n      _type: Type.Boolean,\n      _default: true,\n      _description: 'Whether to show big buttons on the home page (including extensions)',\n    },\n    list: {\n      _type: Type.Array,\n      _elements: {\n        label: { _type: Type.String },\n        link: {\n          _type: Type.String,\n          _validators: [validators.isUrl],\n        },\n        requiredPrivilege: {\n          _type: Type.String,\n        },\n        spa: {\n          _type: Type.Boolean,\n          _default: false,\n        },\n      },\n      _default: [],\n      _description: 'Custom buttons to add, which will come after the button extensions',\n    },\n  },\n  search: {\n    patientResultUrl: {\n      _default: '${openmrsSpaBase}/patient/${patientUuid}/chart',\n      _description: 'Where clicking a patient result takes the user. Accepts template parameter ${patientUuid}',\n      _validators: [validators.isUrlWithTemplateParameters(['patientUuid'])],\n    },\n  },\n  widgets: {\n    enabled: {\n      _type: Type.Boolean,\n      _default: true,\n      _description: 'Whether to show widgets on the home page (including extensions)',\n    },\n  },\n};\n","import {\n  getAsyncLifecycle,\n  defineConfigSchema,\n  registerBreadcrumbs,\n} from \"@openmrs/esm-framework\";\nimport { esmHomeSchema } from \"./openmrs-esm-home-schema\";\n\nconst backendDependencies = {\n  \"webservices.rest\": \"^2.24.0\",\n  fhir2: \"^1.2.0\",\n};\n\nconst importTranslation = require.context(\n  \"../translations\",\n  false,\n  /.json$/,\n  \"lazy\"\n);\n\nfunction setupOpenMRS() {\n  const moduleName = \"@mhiseg/esm-home-app\";\n  const pageName = \"home\";\n\n  const options = {\n    featureName: pageName,\n    moduleName,\n  };\n\n  defineConfigSchema(moduleName, esmHomeSchema);\n\n  registerBreadcrumbs([\n    {\n      path: `${window.spaBase}/${pageName}`,\n      title: \"Home\",\n    },\n  ]);\n\n  return {\n    pages: [\n      {\n        load: getAsyncLifecycle(() => import(\"./root.component\"), options),\n        route: pageName,\n        online: { canSearch: true },\n        offline: { canSearch: false },\n      },\n    ],\n    extensions: [\n      {\n        id: \"death-management-link\",\n        slot: \"app-menu-slot\",\n        load: getAsyncLifecycle(\n          () => import(\"./refapp-links/death.management\"),\n          options\n        ),\n        privilege: \"App: death.management\",\n      },\n      {\n        id: \"system-administration-link\",\n        slot: \"app-menu-slot\",\n        load: getAsyncLifecycle(\n          () => import(\"./refapp-links/system.administration\"),\n          options\n        ),\n        privilege: \"App: system.administration\",\n      },\n    ],\n  };\n}\n\nexport { importTranslation, setupOpenMRS, backendDependencies };\n","var map = {\n\t\"./en.json\": [\n\t\t574,\n\t\t574\n\t],\n\t\"./fr.json\": [\n\t\t757,\n\t\t757\n\t],\n\t\"./kr.json\": [\n\t\t520,\n\t\t520\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 979;\nmodule.exports = webpackAsyncContext;"],"names":["esmHomeSchema","buttons","enabled","_type","Type","_default","_description","list","_elements","label","link","_validators","validators","requiredPrivilege","spa","search","patientResultUrl","widgets","backendDependencies","fhir2","importTranslation","require","setupOpenMRS","moduleName","pageName","options","featureName","defineConfigSchema","registerBreadcrumbs","path","window","spaBase","title","pages","load","getAsyncLifecycle","route","online","canSearch","offline","extensions","id","slot","privilege","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","keys","Object","module","exports"],"sourceRoot":""}